buildscript {
    ext {
        atrium_version = '0.2.0'
        ghPages_version = '0.2.0'
        kbox_version = '0.0.1'
        kotlin_version = '1.1.2-5'
        mockito_kotlin_version = '1.0.1'
        dokka_version = '0.9.14'

        //spek.gradle
        jacoco_tool_version = '0.7.6.201602180812'
        spek_version = '1.1.0'
        junit_version = '1.0.0-M3'

        //publish.gradle
        bintray_version = '1.7.3'
        publish_pkg_name = 'atrium'
        publish_vcsUrl = 'https://github.com/robstoll/atrium.git'
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.dokka'

    repositories {
        mavenCentral()
        maven { url "http://dl.bintray.com/robstoll/tutteli-jars" }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        testCompile("com.nhaarman:mockito-kotlin:$mockito_kotlin_version") {
            exclude group: 'org.jetbrains.kotlin'
        }
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/kdoc"
        linkMapping {
            dir = 'src/main/kotlin'
            url = "https://github.com/robstoll/atrium/tree/master/${project.name}/src/main/kotlin"
            suffix = '#L'
        }
        linkMapping {
            dir = '../atrium-api/src/main/kotlin'
            url = "https://github.com/robstoll/atrium/tree/master/atrium-api/src/main/kotlin"
            suffix = '#L'
        }
    }
}

apply from: 'gradle/scripts/gh-pages.gradle'

dokka {
    moduleName = 'doc'
    outputFormat = 'html'
    outputDirectory = "../${project.name}-gh-pages/$ghPages_version"

    includes = ['atrium-api/src/main/kdoc/packages.md']
    jdkVersion = 6

    def docProjects = subprojects.findAll { !it.name.startsWith("${project.name}-impl") }
    doFirst {
        println "going to generate kdoc including the projects: ${docProjects*.name}"
        println "====================="
    }
    docProjects.each { subProject ->
        linkMapping {
            dir = "${subProject.name}/src/main/kotlin"
            url = "https://github.com/robstoll/${project.name}/tree/master/${subProject.name}/src/main/kotlin"
            suffix = '#L'
        }
    }
    sourceDirs = docProjects.collect { subProject -> file("${subProject.name}/src/main/kotlin") }
}

/*

Release & deploy a commit
--------------------------------
1. change atrium_version and ghPages_version in build.gradle
2. update github pages:
    a) gradlew ghPages
    b) change version number in atrium-gh-pages/latest/index.html
    c) add new version to atrium-gh-pages/README.md
    d) commit & push changes
3. update master:
    a) update README.md:
        1) search for old version and replace with new (gradle and maven examples)
        2) search for `branch=master` and replace it with `tag=vX.Y.Z` (build status and coverage)
    b) commit (modified build.gradle and README.md)
    c) git tag vX.Y.Z
    d) push to origin
4. deploy to bintray:
    a) gradlew bintrayUpload
    b) Log in to bintray, check and publish new jars
5. create release on github

*/
