buildscript {
    ext {
        atrium_version = '0.1.0-SNAPSHOT'
        kbox_version = '0.0.1'
        kotlin_version = '1.1.1'
        mockito_kotlin_version = '1.0.1'
        dokka_version = '0.9.13'

        //spek.gradle
        jacoco_tool_version = '0.7.6.201602180812'
        spek_version = '1.1.0'
        junit_version = '1.0.0-M3'

        //publish.gradle
        bintray_version = '1.7.3'
        publish_vcsUrl = 'https://github.com/robstoll/atrium.git'
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.dokka'

    repositories {
        mavenCentral()
        maven { url "http://dl.bintray.com/robstoll/tutteli-jars" }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        testCompile("com.nhaarman:mockito-kotlin:$mockito_kotlin_version") {
            exclude group: 'org.jetbrains.kotlin'
        }
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/kdoc"
        linkMapping {
            dir = 'src/main/kotlin'
            url = "https://github.com/robstoll/atrium/tree/master/${project.name}/src/main/kotlin"
            suffix = '#L'
        }
        linkMapping {
            dir = '../atrium-api/src/main/kotlin'
            url = "https://github.com/robstoll/atrium/tree/master/atrium-api/src/main/kotlin"
            suffix = '#L'
        }
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

task copyReadme(type: Copy){
    println "Copy README.md to dir ../atrium-gh-pages/"
    from 'README.md'
    into '/../atrium-gh-pages/'
}

task ghPages {
    dependsOn copyReadme
    finalizedBy 'dokka'
    delete "../atrium-gh-pages/doc"
}

dokka {
    moduleName = 'doc'
    outputFormat = 'markdown'
    outputDirectory = "$buildDir/../../atrium-gh-pages/"

    def docProjects = subprojects.findAll { it.name != 'atrium-api-late-binding'}
    println "going to generate kdoc including the projects: ${docProjects*.name}"
    docProjects.each { subProject ->
        linkMapping {
            dir = "${subProject.name}/src/main/kotlin"
            url = "https://github.com/robstoll/atrium/tree/master/${subProject.name}/src/main/kotlin"
            suffix = '#L'
        }
    }
    sourceDirs = docProjects.collect { subProject -> file("${subProject.name}/src/main/kotlin") }
}
